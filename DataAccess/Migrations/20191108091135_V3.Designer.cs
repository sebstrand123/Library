// <auto-generated />
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20191108091135_V3")]
    partial class V3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IDataInterface.Book", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookCondition")
                        .HasColumnType("int");

                    b.Property<string>("BookName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CostPrice")
                        .HasColumnType("int");

                    b.Property<int>("CostumerID")
                        .HasColumnType("int");

                    b.Property<long>("ISBNNumber")
                        .HasColumnType("bigint");

                    b.Property<bool>("InLibrary")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int>("ScrapListID")
                        .HasColumnType("int");

                    b.Property<int>("ShelfID")
                        .HasColumnType("int");

                    b.HasKey("BookID");

                    b.HasIndex("CostumerID");

                    b.HasIndex("ScrapListID");

                    b.HasIndex("ShelfID");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("IDataInterface.Costumer", b =>
                {
                    b.Property<int>("CostumerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountOfBooks")
                        .HasColumnType("int");

                    b.Property<string>("CostumerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostumerBirthDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostumerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasBorrowedBook")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInDebt")
                        .HasColumnType("bit");

                    b.HasKey("CostumerID");

                    b.ToTable("Costumers");
                });

            modelBuilder.Entity("IDataInterface.LibraryBill", b =>
                {
                    b.Property<int>("LibraryBillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CostumerID")
                        .HasColumnType("int");

                    b.Property<decimal>("DelayFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LibraryBillNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("MonthlyFee")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LibraryBillID");

                    b.HasIndex("CostumerID");

                    b.ToTable("LibraryBills");
                });

            modelBuilder.Entity("IDataInterface.ScrapList", b =>
                {
                    b.Property<int>("ScrapListID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LibraryEmployeeID")
                        .HasColumnType("int");

                    b.HasKey("ScrapListID");

                    b.ToTable("ScrapLists");
                });

            modelBuilder.Entity("IDataInterface.Section", b =>
                {
                    b.Property<int>("SectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SectionNumber")
                        .HasColumnType("int");

                    b.HasKey("SectionID");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("IDataInterface.Shelf", b =>
                {
                    b.Property<int>("ShelfID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SectionID")
                        .HasColumnType("int");

                    b.Property<int>("ShelfNumber")
                        .HasColumnType("int");

                    b.HasKey("ShelfID");

                    b.HasIndex("SectionID");

                    b.ToTable("Shelfs");
                });

            modelBuilder.Entity("IDataInterface.Book", b =>
                {
                    b.HasOne("IDataInterface.Costumer", "Costumer")
                        .WithMany("Books")
                        .HasForeignKey("CostumerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IDataInterface.ScrapList", "ScrapList")
                        .WithMany("Books")
                        .HasForeignKey("ScrapListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IDataInterface.Shelf", "Shelf")
                        .WithMany("Books")
                        .HasForeignKey("ShelfID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IDataInterface.LibraryBill", b =>
                {
                    b.HasOne("IDataInterface.Costumer", "Costumer")
                        .WithMany("LibraryBills")
                        .HasForeignKey("CostumerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IDataInterface.Shelf", b =>
                {
                    b.HasOne("IDataInterface.Section", "Section")
                        .WithMany("Shelfs")
                        .HasForeignKey("SectionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
